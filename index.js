(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const a of t.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function c(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=c(e);fetch(e.href,t)}})();const r={headerForm:document.querySelector(".header-form"),taskName:document.querySelector('.header-form-input[name="taskName"]'),taskDescription:document.querySelector('.header-form-input[name="taskDescription"]'),formBtn:document.querySelector(".header-form-btn"),taskList:document.querySelector("#task-list")},i={data:{},createTask(){this.data.value=r.taskName.value,this.data.description=r.taskDescription.value,localStorage.setItem(this.data.value,this.data.description),console.log(this.data)},renderTask(){const s=`<li class="task-list-item">
      <button class="task-list-item-btn">Delete</button>
      <h3>${r.taskName.value}</h3>
      <p>${r.taskDescription.value}</p>
  </li>`;r.taskList.insertAdjacentHTML("afterbegin",s)}};r.headerForm.addEventListener("submit",s=>{s.preventDefault(),i.createTask(),i.renderTask(),r.headerForm.reset()});console.log(i);
//# sourceMappingURL=index.js.map
